1. Set up the first View
- add url in /urls.py
- add urls in app.urls module 

2. Set up postgresql database
- create a new database
- edit settings.py
-- configure .pg_service.conf home dir
-- configure .pgpass
- set TIME_ZONE
command: python manage.py migrate

3. Create models in app/models.py

4. Activate models
- add app.apps.AppConfig to INSTALLED_APPS in settings.py
command: python manage.py makemigrations polls

* command: python manage.py sqlmigrate polls 0001 (check SQL code)
* command: python manage.py check (identify issues)
* three step model to modify models: 1) change model in models.py,
                                     2) run python manage.py makemigrations to create migration
                                     3) python manage.py migrate 
                                     
5. Add models to Admin site

6. Add more Views
- add functions to app/views.py
- prepare templates to separate the design from Python
-- create a directory called 'templates' in the app directory
-- within the templates direcotry create the app directory
-- within the /app/templates/app create a file called index.html
-- prepare template and configure it in views.py, preferably with render shortcut
-- raise a 404 error

! Use generic views from the beginning

! Prepare tests
"We are using tests to tell a story of admin input and user experience on the site, checking
that at every state and for every new  change in the state of the system, the expected results are published."
- good rules of thumbs:
-- a separate TestClass for each model or view
-- a separate test method for each set of conditions you want to test
-- test method names that describe their function

7. Add static files (css, javascript, images)
